#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

..
https://github.com/stvoutsin/lasair-experimental/blob/master/doc/20190128-Spark-on-Swarm.txt
..

docker swarm init --advertise-addr 192.168.1.12


docker network create --driver overlay spark_spark-net



docker service create \
                    --name zookeeper \
                    --network spark_spark-net \
                    -p 32181 \
                    -e ZOOKEEPER_CLIENT_PORT=32181 \
                    -e ZOOKEEPER_TICK_TIME=2000 \
                    confluentinc/cp-zookeeper:3.2.0

docker service create \
                    --name kafka \
                    --network spark_spark-net \
                    -p 9092 \
                    -e KAFKA_BROKER_ID=1 \
                    -e KAFKA_ZOOKEEPER_CONNECT=zookeeper:32181 \
                    -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092 \
                    confluentinc/cp-kafka:3.2.0

 docker service create  \                    
		    --name producer1 \                     
                    --network spark_spark-net \                    
                    -e PYTHONUNBUFFERED=0   \                   
                     alert_stream python bin/sendAlertStream.py my-stream --max-repeats 10 --repeat


docker service create \
                    --name consumer1 \
                    --network spark_spark-net \
                    -e PYTHONUNBUFFERED=0 \
                    alert_stream python bin/printStream.py my-stream


docker service create \
                    --name consumer1 \
                    --network kafkanet \
                    -e PYTHONUNBUFFERED=0 \
                    alert_stream python bin/printStream.py my-stream
